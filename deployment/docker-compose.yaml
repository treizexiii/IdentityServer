version: "3"

services:
  identity-server:
    container_name: identity-server
    build:
      context: ../.
      dockerfile: src/Identity.Server/Dockerfile
    ports:
      - "9090:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DbParams:Host=${DB_HOST}
      - DbParams:Port=${DB_PORT}
      - DbParams:User=${DB_USER}
      - DbParams:Password=${DB_PASSWORD}
      - DbParams:Database=${DB_NAME}
      - Jwt:Key=${SECRET_KEY}
      - Security:SecretHashing:Salt=${SECRET_HASHING_SALT}
    depends_on:
      - identity-database
    networks:
      - identity-network

  identity-database:
    container_name: identity-database
    image: "postgres:latest"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data
    networks:
      - identity-network

  identity-database-migrator:
    container_name: identity-database-migrator
    build:
      context: ../.
      dockerfile: src/Identity.Migrator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    tty: true
    volumes:
      - ${SU_FILE}:/app/datas/su.json
    networks:
      - identity-network

  identity-redis:
    container_name: identity-redis
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_VOLUME}:/data
      - ${REDIS_CONF}:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}" ]

networks:
  identity-network:
    driver: bridge
